name: Terraform CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - 'kubernetes/**'
  pull_request:
    paths:
      - 'terraform/**'
      - 'kubernetes/**'

jobs:
  terraform:
    name: Terraform Deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    permissions:
        pull-requests: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        AWS-ACCESS-KEY-ID: ${{ SECRETS.AWS_ACCESS_KEY_ID }}
        AWS-SECRET-ACCESS-KEY: ${{ SECRETS.AWS_SECRET_ACCESS_KEY }}
        AWS-SESSION-TOKEN: ${{ SECRETS.AWS_SESSION_TOKEN }}
        AWS-REGION: "us-east-1"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
      run: terraform plan -no-color -input=false
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
      env:
        PLAN: ${{ steps.plan.outputs.stdout }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`terraform\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
      run: terraform apply -auto-approve -input=false

    - name: Apply Manifest K8S - EKS
      if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
      run: |
        aws eks update-kubeconfig --region us-east-1 --name easy-food
        kubectl apply -f "../kubernetes/pedido/secret.yaml"
        kubectl apply -f "../kubernetes/pedido/hpa.yaml"
        kubectl apply -f "../kubernetes/pedido/deployment.yaml"
        kubectl apply -f "../kubernetes/pedido/service.yaml"
        kubectl apply -f "../kubernetes/pagamento/secret.yaml"
        kubectl apply -f "../kubernetes/pagamento/hpa.yaml"
        kubectl apply -f "../kubernetes/pagamento/deployment.yaml"
        kubectl apply -f "../kubernetes/pagamento/service.yaml"
        kubectl apply -f "../kubernetes/preparoentrega/secret.yaml"
        kubectl apply -f "../kubernetes/preparoentrega/hpa.yaml"
        kubectl apply -f "../kubernetes/preparoentrega/deployment.yaml"
        kubectl apply -f "../kubernetes/preparoentrega/service.yaml"
        kubectl apply -f "../kubernetes/ingress.yaml"